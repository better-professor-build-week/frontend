{"ast":null,"code":"var _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/App.js\";\nimport React, { Component } from \"react\"; //import SavedList from './Movies/SavedList';\n\nimport StudentsList from \"./StudentsList\"; //import Movie from './Movies/Movie';\n\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport StudentListData from \"./studentlist.json\";\nimport \"./App.css\";\nimport StudentsDetails from \"./StudentsDetails\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Signup from \"./Signup\";\nimport Auth from \"./AuthService\";\nimport SignOutButton from \"./SignOutButton\";\nimport ProjectDetails from \"./ProjectDetails\";\nconst apiRoot = \"https://betterprofessor.herokuapp.com/api\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadStudentsList = () => {\n      return Auth.fetch(\"/professor-student-info\", {\n        method: \"GET\"\n      }).then(response => {\n        console.log(response);\n        this.setState(() => ({\n          students: response\n        }));\n      }).catch(error => {\n        console.error(\"Server Error\", error);\n      });\n    };\n\n    this.postStudent = student => {\n      Auth.fetch(\"/students\", {\n        method: \"POST\",\n        body: JSON.stringify(student)\n      }).then(response => {\n        console.log(response);\n        this.props.history.push(\"/students/\".concat(response.id));\n      }).catch(error => {\n        console.error(\"Server Error\", error);\n      });\n    };\n\n    this.setSelected = (studentId, selected) => {\n      console.log(selected);\n\n      if (selected) {\n        const selectedStudents = this.state.selected.concat(studentId);\n        this.setState({\n          selected: selectedStudents\n        });\n      } else {\n        const comparedStudents = this.state.selected.filter(x => x != studentId);\n        this.setState({\n          selected: comparedStudents\n        });\n      }\n    };\n\n    this.studentDeleted = () => {\n      this.state.selected.forEach(studentId => {\n        Auth.fetch(\"/students/\".concat(studentId), {\n          method: \"DELETE\"\n        }).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.error(\"Server Error\", error);\n        });\n      });\n      this.setState(state => {\n        const listOfSaved = state.students.filter(student => {\n          if (state.selected.indexOf(student.student_id) != -1) return false;\n          return true;\n        });\n        return {\n          students: listOfSaved,\n          selected: []\n        };\n      });\n    };\n\n    this.getStudent = id => {\n      const singleStudent = this.state.students.filter(student => student.student_id == id);\n      console.log(singleStudent);\n      return singleStudent[0];\n    };\n\n    this.state = {\n      students: [],\n      selected: []\n    };\n  }\n\n  componentDidMount() {} // addToSavedList = movie => {\n  //   const savedList = this.state.savedList;\n  //   savedList.push(movie);\n  //   this.setState({ savedList });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(SignOutButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/loginaftersignup\",\n      render: props => React.createElement(Login, {\n        register: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(StudentsList, Object.assign({}, props, {\n        data: this.state.students,\n        postStudent: this.postStudent,\n        selectedStudents: this.state.selected,\n        setSelected: this.setSelected,\n        deleted: this.studentDeleted,\n        loadStudentsList: this.loadStudentsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/students/:id\",\n      render: ({\n        match\n      }) => React.createElement(StudentsDetails, {\n        student_id: match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/projects/:id\",\n      render: ({\n        match\n      }) => React.createElement(ProjectDetails, {\n        project_id: match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/App.js"],"names":["React","Component","StudentsList","Route","Link","withRouter","StudentListData","StudentsDetails","Login","PrivateRoute","Signup","Auth","SignOutButton","ProjectDetails","apiRoot","App","constructor","props","loadStudentsList","fetch","method","then","response","console","log","setState","students","catch","error","postStudent","student","body","JSON","stringify","history","push","id","setSelected","studentId","selected","selectedStudents","state","concat","comparedStudents","filter","x","studentDeleted","forEach","listOfSaved","indexOf","student_id","getStudent","singleStudent","componentDidMount","render","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n//import SavedList from './Movies/SavedList';\nimport StudentsList from \"./StudentsList\";\n//import Movie from './Movies/Movie';\nimport { Route, Link, withRouter } from \"react-router-dom\";\nimport StudentListData from \"./studentlist.json\";\nimport \"./App.css\";\nimport StudentsDetails from \"./StudentsDetails\";\nimport Login from \"./Login\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Signup from \"./Signup\";\nimport Auth from \"./AuthService\";\nimport SignOutButton from \"./SignOutButton\";\nimport ProjectDetails from \"./ProjectDetails\";\n\nconst apiRoot = \"https://betterprofessor.herokuapp.com/api\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            students: [],\n            selected: []\n        };\n    }\n\n    componentDidMount() {}\n\n    // addToSavedList = movie => {\n    //   const savedList = this.state.savedList;\n    //   savedList.push(movie);\n    //   this.setState({ savedList });\n    // };\n\n    loadStudentsList = () => {\n        return Auth.fetch(`/professor-student-info`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(response);\n                this.setState(() => ({ students: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    };\n\n    postStudent = student => {\n        Auth.fetch(`/students`, {\n            method: \"POST\",\n            body: JSON.stringify(student)\n        })\n            .then(response => {\n                console.log(response);\n                this.props.history.push(`/students/${response.id}`);\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    };\n\n    // this.setState( ( state ) => {\n    //   const newStudent = state.students.concat({student: student,\n    //     id:  new Date,\n    //     projects: []\n    //   } );\n\n    //   console.log(\"newStudent\", newStudent);\n    //   return ( {\n    //     student: newStudent;\n    //   } )\n    // } );\n\n    setSelected = (studentId, selected) => {\n        console.log(selected);\n        if (selected) {\n            const selectedStudents = this.state.selected.concat(studentId);\n            this.setState({ selected: selectedStudents });\n        } else {\n            const comparedStudents = this.state.selected.filter(\n                x => x != studentId\n            );\n            this.setState({ selected: comparedStudents });\n        }\n    };\n    studentDeleted = () => {\n        this.state.selected.forEach(studentId => {\n            Auth.fetch(`/students/${studentId}`, {\n                method: \"DELETE\"\n            })\n                .then(response => {\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.error(\"Server Error\", error);\n                });\n        });\n\n        this.setState(state => {\n            const listOfSaved = state.students.filter(student => {\n                if (state.selected.indexOf(student.student_id) != -1)\n                    return false;\n                return true;\n            });\n\n            return {\n                students: listOfSaved,\n                selected: []\n            };\n        });\n    };\n    getStudent = id => {\n        const singleStudent = this.state.students.filter(\n            student => student.student_id == id\n        );\n        console.log(singleStudent);\n        return singleStudent[0];\n    };\n    render() {\n        return (\n            <div className=\"main\">\n                {/* <SavedList list={this.state.savedList} /> */}\n                <SignOutButton />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route\n                    exact\n                    path=\"/loginaftersignup\"\n                    render={props => <Login register={true} />}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/\"\n                    render={props => (\n                        <StudentsList\n                            {...props}\n                            data={this.state.students}\n                            postStudent={this.postStudent}\n                            selectedStudents={this.state.selected}\n                            setSelected={this.setSelected}\n                            deleted={this.studentDeleted}\n                            loadStudentsList={this.loadStudentsList}\n                        />\n                    )}\n                />\n                <PrivateRoute\n                    path=\"/students/:id\"\n                    render={({ match }) => (\n                        <StudentsDetails student_id={match.params.id} />\n                    )}\n                />\n                <PrivateRoute\n                    path=\"/projects/:id\"\n                    render={({ match }) => (\n                        <ProjectDetails project_id={match.params.id} />\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}