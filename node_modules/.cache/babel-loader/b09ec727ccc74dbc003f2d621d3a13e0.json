{"ast":null,"code":"var _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from './AuthService';\nimport AddNewProject from './AddNewProject';\nexport default class StudentsDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postProject = project => {\n      console.log('postProject', project);\n      Auth.fetch(\"/projects\", {\n        method: 'POST',\n        body: JSON.stringify(project)\n      }).then(response => {\n        return Auth.fetch(\"/professor-student-info\", {\n          method: 'POST',\n          body: JSON.stringify({\n            student_id: this.props.student_id,\n            project_id: response.id\n          })\n        });\n      }).then(response => {\n        return Auth.fetch(\"/projects/\".concat(response.project_id), {\n          method: 'GET'\n        });\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          projects: this.state.projects.concat(response)\n        });\n      }).catch(error => {\n        console.error('Server Error', error);\n      });\n    };\n\n    this.state = {\n      student: null,\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    Auth.fetch(\"/students/\".concat(this.props.student_id), {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        student: response\n      }));\n    }).catch(error => {\n      console.error('Server Error', error);\n    });\n    Auth.fetch(\"/students-projects/\".concat(this.props.student_id), {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        projects: response\n      }));\n    }).catch(error => {\n      console.error('Server Error', error);\n    });\n  }\n\n  render() {\n    const student = this.state.student;\n    if (student == null) return null;\n    return React.createElement(\"div\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Student name \", student.firstname, \" \", student.lastname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Email \", student.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Projects \", (this.state.projects || []).map(project => React.createElement(\"div\", {\n      key: project.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, project.project_name))), React.createElement(Link, {\n      className: \"home-button\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Home\"), React.createElement(AddNewProject, {\n      postProject: this.postProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js"],"names":["React","Component","Link","Auth","AddNewProject","StudentsDetails","constructor","props","postProject","project","console","log","fetch","method","body","JSON","stringify","then","response","student_id","project_id","id","setState","projects","state","concat","catch","error","student","componentDidMount","render","firstname","lastname","email","map","project_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from './AuthService';\nimport AddNewProject from './AddNewProject';\n\nexport default class StudentsDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          student: null,\n          projects: []\n        };\n      }\n    \n    componentDidMount () {\n        console.log('componentDidMount')\n        Auth.fetch (`/students/${this.props.student_id}`, {\n            method: 'GET',\n        })\n          .then(response => {\n            console.log(response);\n            this.setState(() => ({ student: response }));\n       })\n       .catch(error => {\n         console.error('Server Error', error);\n       }); \n       Auth.fetch (`/students-projects/${this.props.student_id}`, {\n        method: 'GET',\n    })\n      .then(response => {\n        console.log(response);\n        this.setState(() => ({ projects: response }));\n   })\n   .catch(error => {\n     console.error('Server Error', error);\n   }); \n    }\n\n    postProject = (project) => { \n        console.log('postProject', project);\n        Auth.fetch (`/projects`, {\n          method: 'POST',\n          body: JSON.stringify(project)\n      })\n        .then (response => {\n            return Auth.fetch(`/professor-student-info`,{\n                method: 'POST',\n                body: JSON.stringify({\n                    student_id: this.props.student_id,\n                    project_id:  response.id,\n                })\n            })\n        })\n        .then (response => {\n            return Auth.fetch(`/projects/${response.project_id}`,{\n                method: 'GET'\n            })\n        })\n        .then(response => {\n          console.log(response);\n          this.setState({\n                 projects: this.state.projects.concat(response)\n          })\n        })\n        .catch(error => {\n            console.error('Server Error', error);\n          }); \n    }\n\n    render() {\n        const student = this.state.student\n       if (student == null) \n           return null;\n      return (\n          <div className=\"second\">\n        <div className=\"Student\">\n         <h3>Student name {student.firstname} {student.lastname}</h3>\n         <p>Email {student.email}</p>\n         <p>Projects {(this.state.projects ||[]).map(project => (\n                     <div key={project.id}>\n                             {project.project_name}\n                     </div>)) \n            }\n        </p>\n        <Link  className=\"home-button\" to=\"/\">Home</Link>\n        <AddNewProject\n        postProject={this.postProject}/>\n        </div>\n        </div>\n      )   \n    }\n}\n  \n        \n        "]},"metadata":{},"sourceType":"module"}