{"ast":null,"code":"var _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/ProjectDetails.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"./AuthService\";\nimport SendNewMessage from \"./SendNewMessage\";\nexport default class ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = message => {\n      console.log(\"postMessage\", message);\n      Auth.fetch(\"/projects/\".concat(this.props.project_id, \"/messages\"), {\n        method: \"POST\",\n        body: JSON.stringify(message)\n      }).then(response => {\n        return Auth.fetch(\"/projects/\".concat(this.props.project_id, \"/messages\"), {\n          method: \"GET\"\n        });\n      }).then(response => {\n        this.setState(() => ({\n          messages: response\n        }));\n      }).catch(error => {\n        console.error(\"Server Error\", error);\n      });\n    };\n\n    this.getStudent = student_id => {\n      const student = this.state.students.filter(student => student.student_id == student_id)[0];\n      return student;\n    };\n\n    this.state = {\n      project: null,\n      students: [],\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    Auth.fetch(\"/projects/\".concat(this.props.project_id), {\n      method: \"GET\"\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        project: response\n      }));\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n    Auth.fetch(\"/projects/\".concat(this.props.project_id, \"/students\"), {\n      method: \"GET\"\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        students: response\n      }));\n      return response;\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n    Auth.fetch(\"/projects/\".concat(this.props.project_id, \"/messages\"), {\n      method: \"GET\"\n    }).then(response => {\n      this.setState(() => ({\n        messages: response\n      }));\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n  }\n\n  render() {\n    const project = this.state.project;\n    if (project == null) return null;\n    return React.createElement(\"div\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Project name \", project.project_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Students:\", \" \", this.state.students.map(student => React.createElement(\"div\", {\n      key: student.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, student.firstname, \" \", student.lastname))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Project deadline \", project.project_deadline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Feedback dealine: \", project.feedback_deadline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Recommendation deadline:\", \" \", project.recommendation_deadline), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.messages.map(message => React.createElement(MessageRow, {\n      key: message.id,\n      message: message,\n      student: this.getStudent(message.student_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      className: \"home-button\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Home\"), React.createElement(SendNewMessage, {\n      sendMessage: this.sendMessage,\n      students: this.state.students,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass MessageRow extends Component {\n  render() {\n    console.log(this.props);\n    const _this$props$message = this.props.message,\n          message = _this$props$message.message,\n          send_date = _this$props$message.send_date;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.props.student.firstname, \" \", this.props.student.lastname), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, message)), React.createElement(\"div\", {\n      className: \"Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Data: \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, send_date)));\n  }\n\n}","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/ProjectDetails.js"],"names":["React","Component","Link","Auth","SendNewMessage","ProjectDetails","constructor","props","sendMessage","message","console","log","fetch","project_id","method","body","JSON","stringify","then","response","setState","messages","catch","error","getStudent","student_id","student","state","students","filter","project","componentDidMount","render","project_name","map","id","firstname","lastname","project_deadline","feedback_deadline","recommendation_deadline","MessageRow","send_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAClDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4CnBC,WA5CmB,GA4CLC,OAAO,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,OAA3B;AACAN,MAAAA,IAAI,CAACS,KAAL,qBAAwB,KAAKL,KAAL,CAAWM,UAAnC,gBAA0D;AACtDC,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAFgD,OAA1D,EAKKS,IALL,CAKUC,QAAQ,IAAI;AACd,eAAOhB,IAAI,CAACS,KAAL,qBACU,KAAKL,KAAL,CAAWM,UADrB,gBAEH;AACIC,UAAAA,MAAM,EAAE;AADZ,SAFG,CAAP;AAMH,OAZL,EAaKI,IAbL,CAaUC,QAAQ,IAAI;AACd,aAAKC,QAAL,CAAc,OAAO;AAAEC,UAAAA,QAAQ,EAAEF;AAAZ,SAAP,CAAd;AACH,OAfL,EAgBKG,KAhBL,CAgBWC,KAAK,IAAI;AACZb,QAAAA,OAAO,CAACa,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH,OAlBL;AAmBH,KAjEkB;;AAAA,SAkEnBC,UAlEmB,GAkENC,UAAU,IAAI;AACvB,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CACZH,OAAO,IAAIA,OAAO,CAACD,UAAR,IAAsBA,UADrB,EAEd,CAFc,CAAhB;AAGA,aAAOC,OAAP;AACH,KAvEkB;;AAEf,SAAKC,KAAL,GAAa;AACTG,MAAAA,OAAO,EAAE,IADA;AAETF,MAAAA,QAAQ,EAAE,EAFD;AAGTP,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AACDU,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAR,IAAAA,IAAI,CAACS,KAAL,qBAAwB,KAAKL,KAAL,CAAWM,UAAnC,GAAiD;AAC7CC,MAAAA,MAAM,EAAE;AADqC,KAAjD,EAGKI,IAHL,CAGUC,QAAQ,IAAI;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,WAAKC,QAAL,CAAc,OAAO;AAAEU,QAAAA,OAAO,EAAEX;AAAX,OAAP,CAAd;AACH,KANL,EAOKG,KAPL,CAOWC,KAAK,IAAI;AACZb,MAAAA,OAAO,CAACa,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH,KATL;AAWApB,IAAAA,IAAI,CAACS,KAAL,qBAAwB,KAAKL,KAAL,CAAWM,UAAnC,gBAA0D;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAA1D,EAGKI,IAHL,CAGUC,QAAQ,IAAI;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,WAAKC,QAAL,CAAc,OAAO;AAAEQ,QAAAA,QAAQ,EAAET;AAAZ,OAAP,CAAd;AACA,aAAOA,QAAP;AACH,KAPL,EAQKG,KARL,CAQWC,KAAK,IAAI;AACZb,MAAAA,OAAO,CAACa,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH,KAVL;AAYApB,IAAAA,IAAI,CAACS,KAAL,qBAAwB,KAAKL,KAAL,CAAWM,UAAnC,gBAA0D;AACtDC,MAAAA,MAAM,EAAE;AAD8C,KAA1D,EAGKI,IAHL,CAGUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc,OAAO;AAAEC,QAAAA,QAAQ,EAAEF;AAAZ,OAAP,CAAd;AACH,KALL,EAMKG,KANL,CAMWC,KAAK,IAAI;AACZb,MAAAA,OAAO,CAACa,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH,KARL;AASH;;AA8BDS,EAAAA,MAAM,GAAG;AACL,UAAMF,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAA3B;AACA,QAAIA,OAAO,IAAI,IAAf,EAAqB,OAAO,IAAP;AACrB,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBA,OAAO,CAACG,YAA1B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACc,GADd,EAEK,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,GAApB,CAAwBR,OAAO,IAC5B;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACS,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,OAAO,CAACU,SADb,OACyBV,OAAO,CAACW,QADjC,CADH,CAFL,CAFJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBP,OAAO,CAACQ,gBAA7B,CAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBR,OAAO,CAACS,iBAA9B,CAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAC6B,GAD7B,EAEKT,OAAO,CAACU,uBAFb,CAZJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWN,QAAX,CAAoBa,GAApB,CAAwBzB,OAAO,IAC5B,oBAAC,UAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAAC0B,EADjB;AAEI,MAAA,OAAO,EAAE1B,OAFb;AAGI,MAAA,OAAO,EAAE,KAAKe,UAAL,CAAgBf,OAAO,CAACgB,UAAxB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAhBJ,EAyBI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,EA4BI,oBAAC,cAAD;AACI,MAAA,WAAW,EAAE,KAAKjB,WADtB;AAEI,MAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWC,QAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,CADJ,CADJ;AAqCH;;AAjHiD;;AAoHtD,MAAMa,UAAN,SAAyBxC,SAAzB,CAAmC;AAC/B+B,EAAAA,MAAM,GAAG;AACLtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AADK,gCAE0B,KAAKA,KAAL,CAAWE,OAFrC;AAAA,UAEGA,OAFH,uBAEGA,OAFH;AAAA,UAEYiC,SAFZ,uBAEYA,SAFZ;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnC,KAAL,CAAWmB,OAAX,CAAmBU,SADxB,OACoC,KAAK7B,KAAL,CAAWmB,OAAX,CAAmBW,QADvD,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK5B,OAAL,CADJ,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKiC,SAAL,CADV,CAPJ,CADJ;AAaH;;AAjB8B","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"./AuthService\";\nimport SendNewMessage from \"./SendNewMessage\";\n\nexport default class ProjectDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: null,\n            students: [],\n            messages: []\n        };\n    }\n    componentDidMount() {\n        console.log(\"componentDidMount\");\n        Auth.fetch(`/projects/${this.props.project_id}`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(response);\n                this.setState(() => ({ project: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n\n        Auth.fetch(`/projects/${this.props.project_id}/students`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(response);\n                this.setState(() => ({ students: response }));\n                return response;\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n\n        Auth.fetch(`/projects/${this.props.project_id}/messages`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                this.setState(() => ({ messages: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    }\n\n    sendMessage = message => {\n        console.log(\"postMessage\", message);\n        Auth.fetch(`/projects/${this.props.project_id}/messages`, {\n            method: \"POST\",\n            body: JSON.stringify(message)\n        })\n\n            .then(response => {\n                return Auth.fetch(\n                    `/projects/${this.props.project_id}/messages`,\n                    {\n                        method: \"GET\"\n                    }\n                );\n            })\n            .then(response => {\n                this.setState(() => ({ messages: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    };\n    getStudent = student_id => {\n        const student = this.state.students.filter(\n            student => student.student_id == student_id\n        )[0];\n        return student;\n    };\n    render() {\n        const project = this.state.project;\n        if (project == null) return null;\n        return (\n            <div className=\"second\">\n                <div className=\"Project\">\n                    <h3>Project name {project.project_name}</h3>\n                    <p>\n                        Students:{\" \"}\n                        {this.state.students.map(student => (\n                            <div key={student.id}>\n                                {student.firstname} {student.lastname}\n                            </div>\n                        ))}\n                    </p>\n                    <p>Project deadline {project.project_deadline}</p>\n                    <p>Feedback dealine: {project.feedback_deadline}</p>\n                    <p>\n                        Recommendation deadline:{\" \"}\n                        {project.recommendation_deadline}\n                    </p>\n                    <p>\n                        {this.state.messages.map(message => (\n                            <MessageRow\n                                key={message.id}\n                                message={message}\n                                student={this.getStudent(message.student_id)}\n                            />\n                        ))}\n                    </p>\n                    <Link className=\"home-button\" to=\"/\">\n                        Home\n                    </Link>\n                    <SendNewMessage\n                        sendMessage={this.sendMessage}\n                        students={this.state.students}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass MessageRow extends Component {\n    render() {\n        console.log(this.props);\n        const { message, send_date } = this.props.message;\n        return (\n            <div>\n                <div>\n                    {this.props.student.firstname} {this.props.student.lastname}\n                </div>\n                <div>\n                    <em>{message}</em>\n                </div>\n                <div className=\"Data\">\n                    Data: <em>{send_date}</em>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}