{"ast":null,"code":"var _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/App.js\";\nimport React, { Component } from 'react'; //import SavedList from './Movies/SavedList';\n\nimport StudentsList from './StudentsList'; //import Movie from './Movies/Movie';\n\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport StudentListData from './studentlist.json';\nimport './App.css';\nimport StudentsDetails from './StudentsDetails';\nimport Login from './Login';\nimport PrivateRoute from './PrivateRoute';\nimport Signup from './Signup';\nimport Auth from './AuthService';\nimport SignOutButton from './SignOutButton';\nconst apiRoot = 'https://betterprofessor.herokuapp.com/api';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadStudentsList = () => {\n      return Auth.fetch(\"/professor-student-info\", {\n        method: 'GET'\n      }).then(response => {\n        console.log(response);\n        this.setState(() => ({\n          students: response\n        }));\n      }).catch(error => {\n        console.error('Server Error', error);\n      });\n    };\n\n    this.postStudent = student => {\n      Auth.fetch(\"/students\", {\n        method: 'POST',\n        body: JSON.stringify(student)\n      }).then(response => {\n        console.log(response);\n        this.props.history.push(\"/students/\".concat(response.id));\n      }).catch(error => {\n        console.error('Server Error', error);\n      });\n    };\n\n    this.setSelected = (studentId, selected) => {\n      console.log(selected);\n\n      if (selected) {\n        const selectedStudents = this.state.selected.concat(studentId);\n        this.setState({\n          selected: selectedStudents\n        });\n      } else {\n        const comparedStudents = this.state.selected.filter(x => x != studentId);\n        this.setState({\n          selected: comparedStudents\n        });\n      }\n    };\n\n    this.studentDeleted = () => {\n      this.setState(state => {\n        const listOfSaved = state.students.filter(student => {\n          if (state.selected.indexOf(student.student_id) != -1) return false;\n          return true;\n        });\n        return {\n          students: listOfSaved,\n          selected: []\n        };\n      });\n    };\n\n    this.getStudent = id => {\n      const singleStudent = this.state.students.filter(student => student.student_id == id);\n      console.log(singleStudent);\n      return singleStudent[0];\n    };\n\n    this.state = {\n      students: [],\n      selected: []\n    };\n  }\n\n  componentDidMount() {} // addToSavedList = movie => {\n  //   const savedList = this.state.savedList;\n  //   savedList.push(movie);\n  //   this.setState({ savedList });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(SignOutButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/loginaftersignup\",\n      render: props => React.createElement(Login, {\n        register: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(StudentsList, Object.assign({}, props, {\n        data: this.state.students,\n        postStudent: this.postStudent,\n        selectedStudents: this.state.selected,\n        setSelected: this.setSelected,\n        deleted: this.studentDeleted,\n        loadStudentsList: this.loadStudentsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" Delete a student\"), React.createElement(PrivateRoute, {\n      path: \"/students/:id\",\n      render: ({\n        match\n      }) => React.createElement(StudentsDetails, {\n        student_id: match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/App.js"],"names":["React","Component","StudentsList","Route","Link","withRouter","StudentListData","StudentsDetails","Login","PrivateRoute","Signup","Auth","SignOutButton","apiRoot","App","constructor","props","loadStudentsList","fetch","method","then","response","console","log","setState","students","catch","error","postStudent","student","body","JSON","stringify","history","push","id","setSelected","studentId","selected","selectedStudents","state","concat","comparedStudents","filter","x","studentDeleted","listOfSaved","indexOf","student_id","getStudent","singleStudent","componentDidMount","render","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n//import SavedList from './Movies/SavedList';\nimport StudentsList from './StudentsList';\n//import Movie from './Movies/Movie';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport StudentListData from  './studentlist.json';\nimport './App.css'\nimport StudentsDetails from './StudentsDetails';\nimport Login from './Login';\nimport PrivateRoute from './PrivateRoute';\nimport Signup from './Signup';\nimport Auth from './AuthService';\nimport SignOutButton from './SignOutButton';\n\n\nconst apiRoot = 'https://betterprofessor.herokuapp.com/api';\n  \n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [], \n      selected: []\n    };\n  }\n\n\n      componentDidMount() {\n      \n    }\n  \n\n  // addToSavedList = movie => {\n  //   const savedList = this.state.savedList;\n  //   savedList.push(movie);\n  //   this.setState({ savedList });\n  // };\n\n  loadStudentsList = () =>{\n    return Auth.fetch (`/professor-student-info`, {\n      method: 'GET',\n  })\n    .then(response => {\n      console.log(response);\n    this.setState(() => ({ students: response }));\n })\n .catch(error => {\n   console.error('Server Error', error);\n }); \n  }\n\n  postStudent = (student) => { \n    Auth.fetch (`/students`, {\n      method: 'POST',\n      body: JSON.stringify(student)\n  })\n    .then(response => {\n      console.log(response);\n      this.props.history.push(`/students/${response.id}`);\n })\n .catch(error => {\n   console.error('Server Error', error);\n }); \n  }\n\n \n    // this.setState( ( state ) => {\n    //   const newStudent = state.students.concat({student: student,\n    //     id:  new Date,\n    //     projects: []\n    //   } );\n\n    //   console.log(\"newStudent\", newStudent);\n    //   return ( {\n    //     student: newStudent;\n    //   } )\n    // } );\n \n\n  \n\n  setSelected = (studentId, selected) => {\n    console.log(selected)\n    if (selected) {\n    const selectedStudents =  this.state.selected.concat (studentId);\n    this.setState ({selected: selectedStudents});\n    }\n    else {const comparedStudents = this.state.selected.filter(x => x != studentId);\n    this.setState ({selected: comparedStudents});\n  }\n}\n  studentDeleted = () => {\n    this.setState ((state) =>{\n      const listOfSaved = state.students.filter((student) => {\n        if (state.selected.indexOf(student.student_id) != -1)\n          return false;\n        return true;\n      });\n\n  \n\n      return ( {\n        students: listOfSaved,\n        selected: []\n      } )\n\n    })\n  }\n  getStudent = (id) => {\n   const singleStudent = this.state.students.filter (student => student.student_id == id) \n      console.log(singleStudent);\n   return singleStudent[0];\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        {/* <SavedList list={this.state.savedList} /> */}\n        <SignOutButton/>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"/loginaftersignup\" render={(props) =><Login register = {true}/>}/>\n        <PrivateRoute  exact path='/' render={(props) => <StudentsList {...props} \n                data={this.state.students} \n                postStudent={this.postStudent}\n                selectedStudents={this.state.selected}\n                setSelected={this.setSelected}\n                deleted={this.studentDeleted}\n                loadStudentsList={this.loadStudentsList}\n                />}\n         />\n          <button type=\"submit\"> Delete a student</button>\n       <PrivateRoute path= '/students/:id' render={({match}) => \n       <StudentsDetails student_id={match.params.id}/> }\n        />\n        </div>\n    );\n  }\n}\n\nexport default  withRouter (App)"]},"metadata":{},"sourceType":"module"}