{"ast":null,"code":"var _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"./AuthService\";\nimport AddNewProject from \"./AddNewProject\";\nexport default class StudentsDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postProject = project => {\n      console.log(\"postProject\", project);\n      Auth.fetch(\"/projects\", {\n        method: \"POST\",\n        body: JSON.stringify(project)\n      }).then(response => {\n        return Auth.fetch(\"/professor-student-info\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            student_id: this.props.student_id,\n            project_id: response.id\n          })\n        });\n      }).then(response => {\n        return Auth.fetch(\"/projects/\".concat(response.project_id), {\n          method: \"GET\"\n        });\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          projects: this.state.projects.concat(response)\n        });\n      }).catch(error => {\n        console.error(\"Server Error\", error);\n      });\n    };\n\n    this.state = {\n      student: null,\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    Auth.fetch(\"/students/\".concat(this.props.student_id), {\n      method: \"GET\"\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        student: response\n      }));\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n    Auth.fetch(\"/students-projects/\".concat(this.props.student_id), {\n      method: \"GET\"\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        projects: response\n      }));\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n  }\n\n  render() {\n    const student = this.state.student;\n    if (student == null) return null;\n    return React.createElement(\"div\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Student name \", student.firstname, \" \", student.lastname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email \", student.email), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Projects\", (this.state.projects || []).map(project => React.createElement(\"div\", {\n      key: project.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ProjectRow, {\n      key: project.id,\n      project: project,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))), React.createElement(Link, {\n      className: \"home-button\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Home\"), React.createElement(AddNewProject, {\n      postProject: this.postProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass ProjectRow extends Component {\n  render() {\n    const project = this.props.project;\n    const project_name = project.project_name,\n          project_deadline = project.project_deadline,\n          feedback_deadline = project.feedback_deadline,\n          recommendation_deadline = project.recommendation_deadline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects/\".concat(project.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, project_name))), React.createElement(\"div\", {\n      className: \"Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Project deadline: \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, project_deadline), \"Feedback dealine: \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, feedback_deadline), \"Recommendation deadline: \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, recommendation_deadline)));\n  }\n\n}","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js"],"names":["React","Component","Link","Auth","AddNewProject","StudentsDetails","constructor","props","postProject","project","console","log","fetch","method","body","JSON","stringify","then","response","student_id","project_id","id","setState","projects","state","concat","catch","error","student","componentDidMount","render","firstname","lastname","email","map","handleInputChange","ProjectRow","project_name","project_deadline","feedback_deadline","recommendation_deadline"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"./AuthService\";\nimport AddNewProject from \"./AddNewProject\";\n\nexport default class StudentsDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            student: null,\n            projects: []\n        };\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount\");\n        Auth.fetch(`/students/${this.props.student_id}`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(response);\n                this.setState(() => ({ student: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n        Auth.fetch(`/students-projects/${this.props.student_id}`, {\n            method: \"GET\"\n        })\n            .then(response => {\n                console.log(response);\n                this.setState(() => ({ projects: response }));\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    }\n\n    postProject = project => {\n        console.log(\"postProject\", project);\n        Auth.fetch(`/projects`, {\n            method: \"POST\",\n            body: JSON.stringify(project)\n        })\n            .then(response => {\n                return Auth.fetch(`/professor-student-info`, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        student_id: this.props.student_id,\n                        project_id: response.id\n                    })\n                });\n            })\n            .then(response => {\n                return Auth.fetch(`/projects/${response.project_id}`, {\n                    method: \"GET\"\n                });\n            })\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    projects: this.state.projects.concat(response)\n                });\n            })\n            .catch(error => {\n                console.error(\"Server Error\", error);\n            });\n    };\n\n    render() {\n        const student = this.state.student;\n        if (student == null) return null;\n        return (\n            <div className=\"second\">\n                <div className=\"Student\">\n                    <h3>\n                        Student name {student.firstname} {student.lastname}\n                    </h3>\n                    <p>Email {student.email}</p>\n                    <div>\n                        Projects\n                        {(this.state.projects || []).map(project => (\n                            <div key={project.id}>\n                                <input\n                                    type=\"checkbox\"\n                                    onChange={this.handleInputChange}\n                                />\n                                <ProjectRow\n                                    key={project.id}\n                                    project={project}\n                                />\n\n                                {/* //  {project.project_name}\n                            //  {project.project_deadline}\n                            //  {project.feedback_deadline}\n                            //  {project.recommendation_deadline} */}\n                            </div>\n                        ))}\n                    </div>\n                    <Link className=\"home-button\" to=\"/\">\n                        Home\n                    </Link>\n                    <AddNewProject postProject={this.postProject} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ProjectRow extends Component {\n    render() {\n        const { project } = this.props;\n        const {\n            project_name,\n            project_deadline,\n            feedback_deadline,\n            recommendation_deadline\n        } = project;\n        return (\n            <div>\n                <div>\n                    <Link to={`/projects/${project.id}`}>\n                        <em>{project_name}</em>\n                    </Link>\n                </div>\n                <div className=\"Data\">\n                    Project deadline: <em>{project_deadline}</em>\n                    Feedback dealine: <em>{feedback_deadline}</em>\n                    Recommendation deadline: <em>{recommendation_deadline}</em>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}