{"ast":null,"code":"import _objectSpread from \"/Users/evik/Documents/GitHub/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from './AuthService';\nimport AddNewProject from './AddNewProject';\nexport default class StudentsDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postProject = project => {\n      Auth.fetch(\"/projects\", {\n        method: 'POST',\n        body: JSON.stringify(project)\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          student: _objectSpread({}, this.state.student, {\n            project: this.state.student.project.concat(response.data)\n          })\n        });\n      }).catch(error => {\n        console.error('Server Error', error);\n      });\n    };\n\n    this.state = {\n      student: null\n    };\n  }\n\n  componentDidMount() {\n    Auth.fetch(\"/students/\".concat(this.props.student_id), {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      this.setState(() => ({\n        student: response\n      }));\n    }).catch(error => {\n      console.error('Server Error', error);\n    });\n  }\n\n  render() {\n    const student = this.state.student;\n    if (student == null) return null;\n    return React.createElement(\"div\", {\n      className: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Student name \", student.firstname, \" \", student.lastname), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Email \", student.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Projects \", (student.project || []).map(project => React.createElement(\"div\", {\n      key: project.project_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, project.project_name))), React.createElement(Link, {\n      className: \"home-button\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Home\"), React.createElement(AddNewProject, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/evik/Documents/GitHub/frontend/src/StudentsDetails.js"],"names":["React","Component","Link","Auth","AddNewProject","StudentsDetails","constructor","props","postProject","project","fetch","method","body","JSON","stringify","then","response","console","log","setState","student","state","concat","data","catch","error","componentDidMount","student_id","render","firstname","lastname","email","map","project_id","project_name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AACnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBJC,OAAD,IAAa;AACvBN,MAAAA,IAAI,CAACO,KAAL,cAAyB;AACvBC,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAFiB,OAAzB,EAICM,IAJD,CAIMC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AACZC,UAAAA,OAAO,oBACA,KAAKC,KAAL,CAAWD,OADX;AAEHX,YAAAA,OAAO,EAAC,KAAKY,KAAL,CAAWD,OAAX,CAAmBX,OAAnB,CAA2Ba,MAA3B,CAAkCN,QAAQ,CAACO,IAA3C;AAFL;AADK,SAAd;AAMD,OAZD,EAaCC,KAbD,CAaOC,KAAK,IAAI;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,OAfH;AAgBH,KArCkB;;AAEf,SAAKJ,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEHM,EAAAA,iBAAiB,GAAI;AACjBvB,IAAAA,IAAI,CAACO,KAAL,qBAAyB,KAAKH,KAAL,CAAWoB,UAApC,GAAkD;AAC9ChB,MAAAA,MAAM,EAAE;AADsC,KAAlD,EAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc,OAAO;AAAEC,QAAAA,OAAO,EAAEJ;AAAX,OAAP,CAAd;AACJ,KANA,EAOAQ,KAPA,CAOMC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACQ,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,KATA;AAUH;;AAqBDG,EAAAA,MAAM,GAAG;AACL,UAAMR,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AACD,QAAIA,OAAO,IAAI,IAAf,EACI,OAAO,IAAP;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBA,OAAO,CAACS,SAA1B,OAAsCT,OAAO,CAACU,QAA9C,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUV,OAAO,CAACW,KAAlB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,CAACX,OAAO,CAACX,OAAR,IAAkB,EAAnB,EAAuBuB,GAAvB,CAA2BvB,OAAO,IACnC;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACwB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSxB,OAAO,CAACyB,YADjB,CADC,CAAb,CAHD,EASA,oBAAC,IAAD;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,EAUA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CADE,CADJ;AAgBD;;AA5DkD","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from './AuthService';\nimport AddNewProject from './AddNewProject';\n\nexport default class StudentsDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          student: null,\n        };\n      }\n    \n    componentDidMount () {\n        Auth.fetch (`/students/${this.props.student_id}`, {\n            method: 'GET',\n        })\n          .then(response => {\n            console.log(response);\n            this.setState(() => ({ student: response }));\n       })\n       .catch(error => {\n         console.error('Server Error', error);\n       }); \n    }\n\n    postProject = (project) => { \n        Auth.fetch (`/projects`, {\n          method: 'POST',\n          body: JSON.stringify(project)\n      })\n        .then(response => {\n          console.log(response);\n          this.setState({\n            student: {\n                ...this.state.student, \n                project:this.state.student.project.concat(response.data)\n            }\n          })\n        })\n        .catch(error => {\n            console.error('Server Error', error);\n          }); \n    }\n\n    render() {\n        const student = this.state.student\n       if (student == null) \n           return null;\n      return (\n          <div className=\"second\">\n        <div className=\"Student\">\n         <h3>Student name {student.firstname} {student.lastname}</h3>\n         <p>Email {student.email}</p>\n         <p>Projects {(student.project ||[]).map(project => (\n                     <div key={project.project_id}>\n                             {project.project_name}\n                     </div>)) \n            }\n        </p>\n        <Link  className=\"home-button\" to=\"/\">Home</Link>\n        <AddNewProject/>\n        </div>\n        </div>\n      )   \n    }\n}\n  \n        \n        "]},"metadata":{},"sourceType":"module"}